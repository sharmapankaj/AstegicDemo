package com.example.pankaj.astegicdemo.Database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.pankaj.astegicdemo.Database.AccountsData;
import com.example.pankaj.astegicdemo.Database.ContactsData;
import com.example.pankaj.astegicdemo.Database.ExtensionsData;

import com.example.pankaj.astegicdemo.Database.AccountsDataDao;
import com.example.pankaj.astegicdemo.Database.ContactsDataDao;
import com.example.pankaj.astegicdemo.Database.ExtensionsDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountsDataDaoConfig;
    private final DaoConfig contactsDataDaoConfig;
    private final DaoConfig extensionsDataDaoConfig;

    private final AccountsDataDao accountsDataDao;
    private final ContactsDataDao contactsDataDao;
    private final ExtensionsDataDao extensionsDataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountsDataDaoConfig = daoConfigMap.get(AccountsDataDao.class).clone();
        accountsDataDaoConfig.initIdentityScope(type);

        contactsDataDaoConfig = daoConfigMap.get(ContactsDataDao.class).clone();
        contactsDataDaoConfig.initIdentityScope(type);

        extensionsDataDaoConfig = daoConfigMap.get(ExtensionsDataDao.class).clone();
        extensionsDataDaoConfig.initIdentityScope(type);

        accountsDataDao = new AccountsDataDao(accountsDataDaoConfig, this);
        contactsDataDao = new ContactsDataDao(contactsDataDaoConfig, this);
        extensionsDataDao = new ExtensionsDataDao(extensionsDataDaoConfig, this);

        registerDao(AccountsData.class, accountsDataDao);
        registerDao(ContactsData.class, contactsDataDao);
        registerDao(ExtensionsData.class, extensionsDataDao);
    }
    
    public void clear() {
        accountsDataDaoConfig.clearIdentityScope();
        contactsDataDaoConfig.clearIdentityScope();
        extensionsDataDaoConfig.clearIdentityScope();
    }

    public AccountsDataDao getAccountsDataDao() {
        return accountsDataDao;
    }

    public ContactsDataDao getContactsDataDao() {
        return contactsDataDao;
    }

    public ExtensionsDataDao getExtensionsDataDao() {
        return extensionsDataDao;
    }

}
